# This workflow will build the package and validate it (e.g. inspect code formatting, run tests) against multiple Python versions and OSs.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python v${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install Package Dependencies (required and dev) 
      run: |
        poetry check
        poetry install
      shell: bash
    - name: Inspect Code Formatting
      run: |
        poetry run black . --check
        poetry run isort . --check
      shell: bash
    - name: Run Tests
      run: |
        poetry run pytest --cov --cov-report=xml
      shell: bash
    - name: Upload Coverage Report to codecov.io
      uses: codecov/codecov-action@v4
      with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
    - name: Build
      run: |
        poetry build
      shell: bash
